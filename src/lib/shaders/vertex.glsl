uniform float u_time;
uniform vec2 u_mouse; // üëà 1. –ü—Ä–∏–Ω–∏–º–∞–µ–º uniform

varying float v_depth;

void main() {
  // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–∑–∏—Ü–∏—é –º—ã—à–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –Ω–∞—à–µ–π —Å—Ü–µ–Ω—ã
  vec2 mouse_plane = vec2(u_mouse.x * 20.0 - 10.0, u_mouse.y * 20.0 - 10.0);
  
  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç —á–∞—Å—Ç–∏—Ü—ã –¥–æ –∫—É—Ä—Å–æ—Ä–∞
  float dist = distance(position.xy, mouse_plane);

  // –ß–µ–º –±–ª–∏–∂–µ –∫—É—Ä—Å–æ—Ä, —Ç–µ–º —Å–∏–ª—å–Ω–µ–µ —Å–º–µ—â–µ–Ω–∏–µ –ø–æ –æ—Å–∏ Z
  float strength = smoothstep(2.0, 0.0, dist);

  vec3 pos = position;

  // –°–æ–∑–¥–∞–µ–º –æ—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω—É—é –∏ –ø–ª–∞–≤–Ω—É—é –≤–æ–ª–Ω—É –ø–æ –æ—Å–∏ Z
  pos.z += sin(pos.x * 0.2 + u_time * 0.1) * 0.05;
  pos.z += sin(pos.y * 0.2 + u_time * 0.1) * 0.05;

  // üëá 2. –î–æ–±–∞–≤–ª—è–µ–º —Å–º–µ—â–µ–Ω–∏–µ –æ—Ç –º—ã—à–∏
  pos.z += strength * 2.0;

  v_depth = pos.z;
  
  // –î–µ–ª–∞–µ–º —á–∞—Å—Ç–∏—Ü—ã –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–º–∏
  gl_PointSize = 2.0;
  
  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);
}